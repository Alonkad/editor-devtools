<rt-require dependency="react-bootstrap" as="baseUI"/>
<rt-require dependency="options/components/versionSelector" as="versionSelector"/>
<rt-require dependency="options/components/multiSelector" as="multiSelector"/>
<div>
    <baseUI.Panel class="app">
        <baseUI.Grid>
            <baseUI.Row>
                <baseUI.Col class="col-menu" lg={2}>
                    <versionSelector rt-if="this.state.ReactSource.versions"
                                     key="ReactSource.versions"
                                     label="Santa Viewer"
                                     enabled="{this.state.ReactSource.enabled}"
                                     selectedVersion="{this.state.ReactSource.version}"
                                     versions="{this.state.ReactSource.versions}"
                                     updateSource="{this.updateReactSource}" />
                    <versionSelector rt-if="this.state.EditorSource.versions"
                                     key="EditorSource.versions"
                                     label="Santa Editor"
                                     enabled="{this.state.EditorSource.enabled}"
                                     selectedVersion="{this.state.EditorSource.version}"
                                     versions="{this.state.EditorSource.versions}"
                                     updateSource="{this.updateEditorSource}" />
                    <div rt-if="this.state.updateFailed" class="error-msg" key="errorMsg">
                        In order to get the latest versions list please connect to VPN
                        and login to <a href="http://rudolph.wixpress.com/" target="_blank">rudolph</a>
                    </div>
                </baseUI.Col>
                <baseUI.Col class="col-menu" lg={9}>
                    <baseUI.Tabs defaultActiveKey={1}>
                        <baseUI.Tab eventKey={1} title="Experiments">
                            <multiSelector label="experiments"
                                           items="{this.state.experiments}"
                                           selectAll="{this.selectAll.bind(this, 'experiments')}"
                                           onItemChanged="{this.onExperimentChanged}" />
                        </baseUI.Tab>
                        <baseUI.Tab eventKey={2} title="Debug Packages">
                            <multiSelector label="packages"
                                           items="{this.state.packages}"
                                           selectAll="{this.selectAll.bind(this, 'packages')}"
                                           onItemChanged="{this.onPackageChanged}" />
                        </baseUI.Tab>
                    </baseUI.Tabs>
                </baseUI.Col>
            </baseUI.Row>
        </baseUI.Grid>
    </baseUI.Panel>
</div>